{"ast":null,"code":"var _jsxFileName = \"D:\\\\3_\\u043A\\u0443\\u0440\\u0441\\\\2_\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u043D\\u0430\\u044F_\\u0438\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440\\u0438\\u044F\\\\lib-serv\\\\src\\\\pages\\\\BookPage\\\\BookPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BookCover from \"../../components/BookCover/BookCover\";\nimport BookInfo from \"../../components/BookInfo/BookInfo\";\nimport ActionButtons from \"../../components/ActionButtons/ActionButtons\";\nimport \"./BookPage.css\";\nimport axios from 'axios';\nimport { mockBooks } from '../../data/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookPage() {\n  _s();\n  const {\n    bookId\n  } = useParams();\n  const [bookData, setBookData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isUsingMockData, setIsUsingMockData] = useState(false);\n  const api = axios.create({\n    baseURL: 'https://d527-178-208-64-74.ngrok-free.app',\n    headers: {\n      'ngrok-skip-browser-warning': 'true'\n    },\n    timeout: 5000\n  });\n  useEffect(() => {\n    const fetchBookData = async () => {\n      try {\n        // Пытаемся загрузить с API\n        const response = await api.get('/books');\n        const allBooks = response.data;\n        const selectedBook = allBooks.find(book => book.bookId.toString() === bookId);\n        if (!selectedBook) throw new Error(\"Книга не найдена\");\n        setBookData(formatBookData(selectedBook));\n        setIsUsingMockData(false);\n      } catch (err) {\n        console.error(\"Ошибка запроса, используем моковые данные:\", err);\n\n        // Получаем книги из localStorage или стандартные моковые данные\n        const savedBooks = JSON.parse(localStorage.getItem('mockBooks')) || mockBooks;\n        const foundBook = savedBooks.find(book => book.bookId.toString() === bookId);\n        if (foundBook) {\n          setBookData(formatBookData(foundBook));\n          setIsUsingMockData(true);\n          setError(\"Сервер недоступен. Показаны демонстрационные данные.\");\n        } else {\n          setError(\"Книга не найдена\");\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    const formatBookData = book => ({\n      id: book.bookId,\n      title: book.title,\n      author: book.author,\n      coverImage: book.coverUrl,\n      year: book.publicationYear,\n      publish: book.publisher,\n      isbn: book.isbn,\n      genre: book.genre,\n      description: book.description,\n      keywords: book.keywords\n    });\n    fetchBookData();\n  }, [bookId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error && !isUsingMockData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 41\n  }, this);\n  if (!bookData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u043A\\u043D\\u0438\\u0433\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u044B\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-page\",\n    children: [isUsingMockData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning-banner\",\n      children: \"\\u0421\\u0435\\u0440\\u0432\\u0435\\u0440 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0435\\u043D. \\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u043D\\u044B \\u0434\\u0435\\u043C\\u043E\\u043D\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-but\",\n        children: [/*#__PURE__*/_jsxDEV(BookCover, {\n          image: bookData.coverImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n          bookId: bookData.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-details\",\n        children: /*#__PURE__*/_jsxDEV(BookInfo, {\n          ...bookData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(BookPage, \"beY1GuODPEXcngKKokCu0UoGUac=\", false, function () {\n  return [useParams];\n});\n_c = BookPage;\nexport default BookPage;\nvar _c;\n$RefreshReg$(_c, \"BookPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","BookCover","BookInfo","ActionButtons","axios","mockBooks","jsxDEV","_jsxDEV","BookPage","_s","bookId","bookData","setBookData","loading","setLoading","error","setError","isUsingMockData","setIsUsingMockData","api","create","baseURL","headers","timeout","fetchBookData","response","get","allBooks","data","selectedBook","find","book","toString","Error","formatBookData","err","console","savedBooks","JSON","parse","localStorage","getItem","foundBook","id","title","author","coverImage","coverUrl","year","publicationYear","publish","publisher","isbn","genre","description","keywords","className","children","fileName","_jsxFileName","lineNumber","columnNumber","image","_c","$RefreshReg$"],"sources":["D:/3_курс/2_семестр/программная_инженерия/lib-serv/src/pages/BookPage/BookPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport BookCover from \"../../components/BookCover/BookCover\";\r\nimport BookInfo from \"../../components/BookInfo/BookInfo\";\r\nimport ActionButtons from \"../../components/ActionButtons/ActionButtons\";\r\nimport \"./BookPage.css\";\r\nimport axios from 'axios';\r\nimport { mockBooks } from '../../data/mockData';\r\n\r\nfunction BookPage() {\r\n  const { bookId } = useParams();\r\n  const [bookData, setBookData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isUsingMockData, setIsUsingMockData] = useState(false);\r\n\r\n  const api = axios.create({\r\n    baseURL: 'https://d527-178-208-64-74.ngrok-free.app',\r\n    headers: {\r\n      'ngrok-skip-browser-warning': 'true'\r\n    },\r\n    timeout: 5000\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchBookData = async () => {\r\n      try {\r\n        // Пытаемся загрузить с API\r\n        const response = await api.get('/books');\r\n        const allBooks = response.data;\r\n        const selectedBook = allBooks.find(book => book.bookId.toString() === bookId);\r\n        \r\n        if (!selectedBook) throw new Error(\"Книга не найдена\");\r\n        \r\n        setBookData(formatBookData(selectedBook));\r\n        setIsUsingMockData(false);\r\n      } catch (err) {\r\n        console.error(\"Ошибка запроса, используем моковые данные:\", err);\r\n        \r\n        // Получаем книги из localStorage или стандартные моковые данные\r\n        const savedBooks = JSON.parse(localStorage.getItem('mockBooks')) || mockBooks;\r\n        const foundBook = savedBooks.find(book => book.bookId.toString() === bookId);\r\n        \r\n        if (foundBook) {\r\n          setBookData(formatBookData(foundBook));\r\n          setIsUsingMockData(true);\r\n          setError(\"Сервер недоступен. Показаны демонстрационные данные.\");\r\n        } else {\r\n          setError(\"Книга не найдена\");\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const formatBookData = (book) => ({\r\n      id: book.bookId,\r\n      title: book.title,\r\n      author: book.author,\r\n      coverImage: book.coverUrl,\r\n      year: book.publicationYear,\r\n      publish: book.publisher,\r\n      isbn: book.isbn,\r\n      genre: book.genre,\r\n      description: book.description,\r\n      keywords: book.keywords\r\n    });\r\n\r\n    fetchBookData();\r\n  }, [bookId]);\r\n\r\n  if (loading) return <div className=\"loading\">Загрузка...</div>;\r\n  if (error && !isUsingMockData) return <div className=\"error\">{error}</div>;\r\n  if (!bookData) return <div className=\"error\">Данные о книге не загружены</div>;\r\n\r\n  return (\r\n    <div className=\"book-page\">\r\n      {isUsingMockData && (\r\n        <div className=\"warning-banner\">\r\n          Сервер недоступен. Показаны демонстрационные данные.\r\n        </div>\r\n      )}\r\n      <div className=\"book-main\">\r\n        <div className=\"book-but\">\r\n          <BookCover image={bookData.coverImage} />\r\n          <ActionButtons bookId={bookData.id} />\r\n        </div>\r\n        <div className=\"book-details\">\r\n          <BookInfo {...bookData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}